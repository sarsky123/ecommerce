{"version":3,"sources":["webpack:///./node_modules/bootstrap-vue/esm/directives/tooltip/tooltip.js","webpack:///./node_modules/bootstrap-vue/esm/directives/toggle/toggle.js","webpack:///./node_modules/bootstrap-vue/esm/directives/modal/index.js","webpack:///./node_modules/bootstrap-vue/esm/directives/popover/index.js","webpack:///./node_modules/bootstrap-vue/esm/directives/scrollspy/scrollspy.class.js","webpack:///./node_modules/bootstrap-vue/esm/directives/scrollspy/scrollspy.js","webpack:///./node_modules/bootstrap-vue/esm/directives/scrollspy/index.js","webpack:///./node_modules/bootstrap-vue/esm/directives/toggle/index.js","webpack:///./node_modules/bootstrap-vue/esm/directives/tooltip/index.js","webpack:///./node_modules/bootstrap-vue/esm/directives/index.esm.js","webpack:///./node_modules/bootstrap-vue/esm/index.js","webpack:///./node_modules/bootstrap-vue/esm/directives/popover/popover.js","webpack:///./node_modules/bootstrap-vue/esm/directives/modal/modal.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","BV_TOOLTIP","validTriggers","focus","hover","click","blur","htmlRE","noFadeRE","placementRE","boundaryRE","delayRE","offsetRE","variantRE","parseBindings","bindings","NAME","config","delay","boundary","String","boundaryPadding","parseInt","variant","customClass","title","arg","container","concat","modifiers","mod","test","html","animation","placement","slice","offset","selectedTriggers","triggers","trigger","trim","split","join","applyTooltip","el","vnode","updateConfig","context","removeTooltip","destroy","VBTooltip","bind","inserted","update","oldValue","componentUpdated","unbind","listenTypes","BV_TOGGLE","BV_TOGGLE_STATE","BV_TOGGLE_CONTROLS","BV_TOGGLE_TARGETS","EVENT_TOGGLE","EVENT_STATE","EVENT_STATE_SYNC","EVENT_STATE_REQUEST","resetProp","prop","handleTargets","_ref","targets","$root","$emit","handleUpdate","binding","VBToggle","tagName","toggleDirectiveHandler","id","state","indexOf","$on","updated","$off","VBModalPlugin","directives","VBModal","VBPopoverPlugin","VBPopover","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","prototype","ACTIVATE_EVENT","Default","element","method","throttle","DefaultType","ClassName","DROPDOWN_ITEM","ACTIVE","Selector","NAV_LIST_GROUP","NAV_LINKS","NAV_ITEMS","LIST_ITEMS","DROPDOWN","DROPDOWN_ITEMS","DROPDOWN_TOGGLE","OffsetMethod","OFFSET","POSITION","HREF_REGEX","TransitionEndEvents","EventOptions","passive","capture","match","toLowerCase","componentName","configTypes","property","hasOwnProperty","call","expectedTypes","valueType","_isVue","RegExp","warn","ScrollSpy","this","$el","$scroller","$selector","$offsets","$targets","$activeTarget","$scrollHeight","$resizeTimeout","$obs_scroller","$obs_targets","$config","unlisten","cfg","constructor","Name","self","$nextTick","listen","clearTimeout","_this","scroller","getScroller","window","evtName","setObservers","handleEvent","_this2","on","_this3","disconnect","subtree","childList","attributes","attributeFilter","characterData","evt","type","resizeThrottle","setTimeout","refresh","process","_this4","autoMethod","methodFn","offsetBase","getScrollTop","getScrollHeight","map","link","href","replace","top","Boolean","sort","a","b","reduce","memo","item","scrollTop","scrollHeight","maxScroll","getOffsetHeight","activate","clear","isActiveTarget","pageYOffset","Math","max","document","body","documentElement","innerHeight","height","_this5","links","selector","dropdown","setActiveState","parentElement","sibling","previousElementSibling","_this6","active","get","BV_SCROLLSPY","round","k","removeScrollspy","dispose","VBScrollspy","VBScrollspyPlugin","VBTogglePlugin","VBTooltipPlugin","directivesPlugin","plugins","install","componentsPlugin","BootstrapVue","BV_POPOVER","content","applyPopover","removePopover","EVENT_SHOW","setRole","elm"],"mappings":"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","file":"js/chunk-vendors~f8ef863f.b06692b9.js","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Popper from 'popper.js';\nimport ToolTip from '../../utils/tooltip.class';\nimport warn from '../../utils/warn';\nimport { getComponentConfig } from '../../utils/config';\nimport { isBrowser } from '../../utils/env';\nimport { isFunction, isObject, isString } from '../../utils/inspect';\nimport { keys } from '../../utils/object'; // Key which we use to store tooltip object on element\n\nvar BV_TOOLTIP = '__BV_ToolTip__'; // Valid event triggers\n\nvar validTriggers = {\n  focus: true,\n  hover: true,\n  click: true,\n  blur: true // Directive modifier test regular expressions. Pre-compile for performance\n\n};\nvar htmlRE = /^html$/;\nvar noFadeRE = /^nofade$/i;\nvar placementRE = /^(auto|top(left|right)?|bottom(left|right)?|left(top|bottom)?|right(top|bottom)?)$/;\nvar boundaryRE = /^(window|viewport|scrollParent)$/;\nvar delayRE = /^d\\d+$/;\nvar offsetRE = /^o-?\\d+$/;\nvar variantRE = /^v-.+$/; // Build a ToolTip config based on bindings (if any)\n// Arguments and modifiers take precedence over passed value config object\n\n/* istanbul ignore next: not easy to test */\n\nvar parseBindings = function parseBindings(bindings)\n/* istanbul ignore next: not easy to test */\n{\n  // We start out with a basic config\n  var NAME = 'BTooltip';\n  var config = {\n    delay: getComponentConfig(NAME, 'delay'),\n    boundary: String(getComponentConfig(NAME, 'boundary')),\n    boundaryPadding: parseInt(getComponentConfig(NAME, 'boundaryPadding'), 10) || 0,\n    variant: getComponentConfig(NAME, 'variant'),\n    customClass: getComponentConfig(NAME, 'customClass') // Process bindings.value\n\n  };\n\n  if (isString(bindings.value)) {\n    // Value is tooltip content (html optionally supported)\n    config.title = bindings.value;\n  } else if (isFunction(bindings.value)) {\n    // Title generator function\n    config.title = bindings.value;\n  } else if (isObject(bindings.value)) {\n    // Value is config object, so merge\n    config = _objectSpread({}, config, {}, bindings.value);\n  } // If argument, assume element ID of container element\n\n\n  if (bindings.arg) {\n    // Element ID specified as arg\n    // We must prepend '#' to become a CSS selector\n    config.container = \"#\".concat(bindings.arg);\n  } // Process modifiers\n\n\n  keys(bindings.modifiers).forEach(function (mod) {\n    if (htmlRE.test(mod)) {\n      // Title allows HTML\n      config.html = true;\n    } else if (noFadeRE.test(mod)) {\n      // No animation\n      config.animation = false;\n    } else if (placementRE.test(mod)) {\n      // Placement of tooltip\n      config.placement = mod;\n    } else if (boundaryRE.test(mod)) {\n      // Boundary of tooltip\n      config.boundary = mod;\n    } else if (delayRE.test(mod)) {\n      // Delay value\n      var delay = parseInt(mod.slice(1), 10) || 0;\n\n      if (delay) {\n        config.delay = delay;\n      }\n    } else if (offsetRE.test(mod)) {\n      // Offset value, negative allowed\n      var offset = parseInt(mod.slice(1), 10) || 0;\n\n      if (offset) {\n        config.offset = offset;\n      }\n    } else if (variantRE.test(mod)) {\n      // Variant\n      config.variant = mod.slice(2) || null;\n    }\n  }); // Special handling of event trigger modifiers trigger is\n  // a space separated list\n\n  var selectedTriggers = {}; // Parse current config object trigger\n\n  var triggers = isString(config.trigger) ? config.trigger.trim().split(/\\s+/) : [];\n  triggers.forEach(function (trigger) {\n    if (validTriggers[trigger]) {\n      selectedTriggers[trigger] = true;\n    }\n  }); // Parse modifiers for triggers\n\n  keys(validTriggers).forEach(function (trigger) {\n    if (bindings.modifiers[trigger]) {\n      selectedTriggers[trigger] = true;\n    }\n  }); // Sanitize triggers\n\n  config.trigger = keys(selectedTriggers).join(' ');\n\n  if (config.trigger === 'blur') {\n    // Blur by itself is useless, so convert it to 'focus'\n    config.trigger = 'focus';\n  }\n\n  if (!config.trigger) {\n    // Remove trigger config\n    delete config.trigger;\n  }\n\n  return config;\n}; // Add or update ToolTip on our element\n\n\nvar applyTooltip = function applyTooltip(el, bindings, vnode) {\n  if (!isBrowser) {\n    /* istanbul ignore next */\n    return;\n  }\n\n  if (!Popper) {\n    // Popper is required for ToolTips to work\n\n    /* istanbul ignore next */\n    warn('v-b-tooltip: Popper.js is required for ToolTips to work');\n    /* istanbul ignore next */\n\n    return;\n  }\n\n  var config = parseBindings(bindings);\n\n  if (el[BV_TOOLTIP]) {\n    el[BV_TOOLTIP].updateConfig(config);\n  } else {\n    el[BV_TOOLTIP] = new ToolTip(el, config, vnode.context);\n  }\n}; // Remove ToolTip on our element\n\n\nvar removeTooltip = function removeTooltip(el) {\n  if (el[BV_TOOLTIP]) {\n    el[BV_TOOLTIP].destroy();\n    el[BV_TOOLTIP] = null;\n    delete el[BV_TOOLTIP];\n  }\n};\n/*\n * Export our directive\n */\n\n\nexport var VBTooltip = {\n  bind: function bind(el, bindings, vnode) {\n    applyTooltip(el, bindings, vnode);\n  },\n  inserted: function inserted(el, bindings, vnode) {\n    applyTooltip(el, bindings, vnode);\n  },\n  update: function update(el, bindings, vnode)\n  /* istanbul ignore next: not easy to test */\n  {\n    if (bindings.value !== bindings.oldValue) {\n      applyTooltip(el, bindings, vnode);\n    }\n  },\n  componentUpdated: function componentUpdated(el, bindings, vnode)\n  /* istanbul ignore next: not easy to test */\n  {\n    if (bindings.value !== bindings.oldValue) {\n      applyTooltip(el, bindings, vnode);\n    }\n  },\n  unbind: function unbind(el) {\n    removeTooltip(el);\n  }\n};\nexport default VBTooltip;","import looseEqual from '../../utils/loose-equal';\nimport { addClass, removeAttr, removeClass, setAttr } from '../../utils/dom';\nimport { isBrowser } from '../../utils/env';\nimport { bindTargets, getTargets, unbindTargets } from '../../utils/target'; // Target listen types\n\nvar listenTypes = {\n  click: true // Property key for handler storage\n\n};\nvar BV_TOGGLE = '__BV_toggle__';\nvar BV_TOGGLE_STATE = '__BV_toggle_STATE__';\nvar BV_TOGGLE_CONTROLS = '__BV_toggle_CONTROLS__';\nvar BV_TOGGLE_TARGETS = '__BV_toggle_TARGETS__'; // Emitted control event for collapse (emitted to collapse)\n\nvar EVENT_TOGGLE = 'bv::toggle::collapse'; // Listen to event for toggle state update (emitted by collapse)\n\nvar EVENT_STATE = 'bv::collapse::state'; // Private event emitted on $root to ensure the toggle state is always synced.\n// Gets emitted even if the state of b-collapse has not changed.\n// This event is NOT to be documented as people should not be using it.\n\nvar EVENT_STATE_SYNC = 'bv::collapse::sync::state'; // Private event we send to collapse to request state update sync event\n\nvar EVENT_STATE_REQUEST = 'bv::request::collapse::state'; // Reset and remove a property from the provided element\n\nvar resetProp = function resetProp(el, prop) {\n  el[prop] = null;\n  delete el[prop];\n}; // Handle targets update\n\n\nvar handleTargets = function handleTargets(_ref) {\n  var targets = _ref.targets,\n      vnode = _ref.vnode;\n  targets.forEach(function (target) {\n    vnode.context.$root.$emit(EVENT_TOGGLE, target);\n  });\n}; // Handle directive updates\n\n/* istanbul ignore next: not easy to test */\n\n\nvar handleUpdate = function handleUpdate(el, binding, vnode) {\n  if (!isBrowser) {\n    return;\n  }\n\n  if (!looseEqual(getTargets(binding), el[BV_TOGGLE_TARGETS])) {\n    // Targets have changed, so update accordingly\n    unbindTargets(vnode, binding, listenTypes);\n    var targets = bindTargets(vnode, binding, listenTypes, handleTargets); // Update targets array to element\n\n    el[BV_TOGGLE_TARGETS] = targets; // Add aria attributes to element\n\n    el[BV_TOGGLE_CONTROLS] = targets.join(' '); // ensure aria-controls is up to date\n\n    setAttr(el, 'aria-controls', el[BV_TOGGLE_CONTROLS]); // Request a state update from targets so that we can ensure\n    // expanded state is correct\n\n    targets.forEach(function (target) {\n      vnode.context.$root.$emit(EVENT_STATE_REQUEST, target);\n    });\n  } // Ensure the collapse class and aria-* attributes persist\n  // after element is updated (either by parent re-rendering\n  // or changes to this element or it's contents\n\n\n  if (el[BV_TOGGLE_STATE] === true) {\n    addClass(el, 'collapsed');\n    setAttr(el, 'aria-expanded', 'true');\n  } else if (el[BV_TOGGLE_STATE] === false) {\n    removeClass(el, 'collapsed');\n    setAttr(el, 'aria-expanded', 'false');\n  }\n\n  setAttr(el, 'aria-controls', el[BV_TOGGLE_CONTROLS]);\n};\n/*\n * Export our directive\n */\n\n\nexport var VBToggle = {\n  bind: function bind(el, binding, vnode) {\n    var targets = bindTargets(vnode, binding, listenTypes, handleTargets);\n\n    if (isBrowser && vnode.context && targets.length > 0) {\n      // Add targets array to element\n      el[BV_TOGGLE_TARGETS] = targets; // Add aria attributes to element\n\n      el[BV_TOGGLE_CONTROLS] = targets.join(' '); // State is initially collapsed until we receive a state event\n\n      el[BV_TOGGLE_STATE] = false;\n      setAttr(el, 'aria-controls', el[BV_TOGGLE_CONTROLS]);\n      setAttr(el, 'aria-expanded', 'false'); // If element is not a button, we add `role=\"button\"` for accessibility\n\n      if (el.tagName !== 'BUTTON') {\n        setAttr(el, 'role', 'button');\n      } // Toggle state handler\n\n\n      var toggleDirectiveHandler = function toggleDirectiveHandler(id, state) {\n        var targets = el[BV_TOGGLE_TARGETS] || [];\n\n        if (targets.indexOf(id) !== -1) {\n          // Set aria-expanded state\n          setAttr(el, 'aria-expanded', state ? 'true' : 'false'); // Set/Clear 'collapsed' class state\n\n          el[BV_TOGGLE_STATE] = state;\n\n          if (state) {\n            removeClass(el, 'collapsed');\n          } else {\n            addClass(el, 'collapsed');\n          }\n        }\n      }; // Store the toggle handler on the element\n\n\n      el[BV_TOGGLE] = toggleDirectiveHandler; // Listen for toggle state changes (public)\n\n      vnode.context.$root.$on(EVENT_STATE, el[BV_TOGGLE]); // Listen for toggle state sync (private)\n\n      vnode.context.$root.$on(EVENT_STATE_SYNC, el[BV_TOGGLE]);\n    }\n  },\n  componentUpdated: handleUpdate,\n  updated: handleUpdate,\n  unbind: function unbind(el, binding, vnode)\n  /* istanbul ignore next */\n  {\n    unbindTargets(vnode, binding, listenTypes); // Remove our $root listener\n\n    if (el[BV_TOGGLE]) {\n      vnode.context.$root.$off(EVENT_STATE, el[BV_TOGGLE]);\n      vnode.context.$root.$off(EVENT_STATE_SYNC, el[BV_TOGGLE]);\n    } // Reset custom  props\n\n\n    resetProp(el, BV_TOGGLE);\n    resetProp(el, BV_TOGGLE_STATE);\n    resetProp(el, BV_TOGGLE_CONTROLS);\n    resetProp(el, BV_TOGGLE_TARGETS); // Reset classes/attrs\n\n    removeClass(el, 'collapsed');\n    removeAttr(el, 'aria-expanded');\n    removeAttr(el, 'aria-controls');\n    removeAttr(el, 'role');\n  }\n};\nexport default VBToggle;","import { VBModal } from './modal';\nimport { pluginFactory } from '../../utils/plugins';\nvar VBModalPlugin =\n/*#__PURE__*/\npluginFactory({\n  directives: {\n    VBModal: VBModal\n  }\n});\nexport { VBModalPlugin, VBModal };\nexport default VBModalPlugin;","import { VBPopover } from './popover';\nimport { pluginFactory } from '../../utils/plugins';\nvar VBPopoverPlugin =\n/*#__PURE__*/\npluginFactory({\n  directives: {\n    VBPopover: VBPopover\n  }\n});\nexport { VBPopoverPlugin, VBPopover };\nexport default VBPopoverPlugin;","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/*\n * ScrollSpy class definition\n */\nimport observeDom from '../../utils/observe-dom';\nimport warn from '../../utils/warn';\nimport { isElement, isVisible, closest, matches, getBCR, offset, position, selectAll, select, hasClass, addClass, removeClass, getAttr, eventOn, eventOff } from '../../utils/dom';\nimport { isString, isUndefined } from '../../utils/inspect';\nimport { toString as objectToString } from '../../utils/object';\n/*\n * Constants / Defaults\n */\n\nvar NAME = 'v-b-scrollspy';\nvar ACTIVATE_EVENT = 'bv::scrollspy::activate';\nvar Default = {\n  element: 'body',\n  offset: 10,\n  method: 'auto',\n  throttle: 75\n};\nvar DefaultType = {\n  element: '(string|element|component)',\n  offset: 'number',\n  method: 'string',\n  throttle: 'number'\n};\nvar ClassName = {\n  DROPDOWN_ITEM: 'dropdown-item',\n  ACTIVE: 'active'\n};\nvar Selector = {\n  ACTIVE: '.active',\n  NAV_LIST_GROUP: '.nav, .list-group',\n  NAV_LINKS: '.nav-link',\n  NAV_ITEMS: '.nav-item',\n  LIST_ITEMS: '.list-group-item',\n  DROPDOWN: '.dropdown, .dropup',\n  DROPDOWN_ITEMS: '.dropdown-item',\n  DROPDOWN_TOGGLE: '.dropdown-toggle'\n};\nvar OffsetMethod = {\n  OFFSET: 'offset',\n  POSITION: 'position' // HREFs must end with a hash followed by at least one non-hash character.\n  // HREFs in the links are assumed to point to non-external links.\n  // Comparison to the current page base URL is not performed!\n\n};\nvar HREF_REGEX = /^.*(#[^#]+)$/; // Transition Events\n\nvar TransitionEndEvents = ['webkitTransitionEnd', 'transitionend', 'otransitionend', 'oTransitionEnd']; // Options for events\n\nvar EventOptions = {\n  passive: true,\n  capture: false\n  /*\n   * Utility Methods\n   */\n  // Better var type detection\n\n};\n\nvar toType = function toType(obj)\n/* istanbul ignore next: not easy to test */\n{\n  return objectToString(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n}; // Check config properties for expected types\n\n\nvar typeCheckConfig = function typeCheckConfig(componentName, config, configTypes)\n/* istanbul ignore next: not easy to test */\n{\n  for (var property in configTypes) {\n    if (Object.prototype.hasOwnProperty.call(configTypes, property)) {\n      var expectedTypes = configTypes[property];\n      var value = config[property];\n      var valueType = value && isElement(value) ? 'element' : toType(value); // handle Vue instances\n\n      valueType = value && value._isVue ? 'component' : valueType;\n\n      if (!new RegExp(expectedTypes).test(valueType)) {\n        /* istanbul ignore next */\n        warn(\"\".concat(componentName, \": Option \\\"\").concat(property, \"\\\" provided type \\\"\").concat(valueType, \"\\\" but expected type \\\"\").concat(expectedTypes, \"\\\"\"));\n      }\n    }\n  }\n};\n/*\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\n/* istanbul ignore next: not easy to test */\n\n\nvar ScrollSpy\n/* istanbul ignore next: not easy to test */\n=\n/*#__PURE__*/\nfunction () {\n  function ScrollSpy(element, config, $root) {\n    _classCallCheck(this, ScrollSpy);\n\n    // The element we activate links in\n    this.$el = element;\n    this.$scroller = null;\n    this.$selector = [Selector.NAV_LINKS, Selector.LIST_ITEMS, Selector.DROPDOWN_ITEMS].join(',');\n    this.$offsets = [];\n    this.$targets = [];\n    this.$activeTarget = null;\n    this.$scrollHeight = 0;\n    this.$resizeTimeout = null;\n    this.$obs_scroller = null;\n    this.$obs_targets = null;\n    this.$root = $root || null;\n    this.$config = null;\n    this.updateConfig(config);\n  }\n\n  _createClass(ScrollSpy, [{\n    key: \"updateConfig\",\n    value: function updateConfig(config, $root) {\n      if (this.$scroller) {\n        // Just in case out scroll element has changed\n        this.unlisten();\n        this.$scroller = null;\n      }\n\n      var cfg = _objectSpread({}, this.constructor.Default, {}, config);\n\n      if ($root) {\n        this.$root = $root;\n      }\n\n      typeCheckConfig(this.constructor.Name, cfg, this.constructor.DefaultType);\n      this.$config = cfg;\n\n      if (this.$root) {\n        var self = this;\n        this.$root.$nextTick(function () {\n          self.listen();\n        });\n      } else {\n        this.listen();\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.unlisten();\n      clearTimeout(this.$resizeTimeout);\n      this.$resizeTimeout = null;\n      this.$el = null;\n      this.$config = null;\n      this.$scroller = null;\n      this.$selector = null;\n      this.$offsets = null;\n      this.$targets = null;\n      this.$activeTarget = null;\n      this.$scrollHeight = null;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen() {\n      var _this = this;\n\n      var scroller = this.getScroller();\n\n      if (scroller && scroller.tagName !== 'BODY') {\n        eventOn(scroller, 'scroll', this, EventOptions);\n      }\n\n      eventOn(window, 'scroll', this, EventOptions);\n      eventOn(window, 'resize', this, EventOptions);\n      eventOn(window, 'orientationchange', this, EventOptions);\n      TransitionEndEvents.forEach(function (evtName) {\n        eventOn(window, evtName, _this, EventOptions);\n      });\n      this.setObservers(true); // Schedule a refresh\n\n      this.handleEvent('refresh');\n    }\n  }, {\n    key: \"unlisten\",\n    value: function unlisten() {\n      var _this2 = this;\n\n      var scroller = this.getScroller();\n      this.setObservers(false);\n\n      if (scroller && scroller.tagName !== 'BODY') {\n        eventOff(scroller, 'scroll', this, EventOptions);\n      }\n\n      eventOff(window, 'scroll', this, EventOptions);\n      eventOff(window, 'resize', this, EventOptions);\n      eventOff(window, 'orientationchange', this, EventOptions);\n      TransitionEndEvents.forEach(function (evtName) {\n        eventOff(window, evtName, _this2, EventOptions);\n      });\n    }\n  }, {\n    key: \"setObservers\",\n    value: function setObservers(on) {\n      var _this3 = this;\n\n      // We observe both the scroller for content changes, and the target links\n      if (this.$obs_scroller) {\n        this.$obs_scroller.disconnect();\n        this.$obs_scroller = null;\n      }\n\n      if (this.$obs_targets) {\n        this.$obs_targets.disconnect();\n        this.$obs_targets = null;\n      }\n\n      if (on) {\n        this.$obs_targets = observeDom(this.$el, function () {\n          _this3.handleEvent('mutation');\n        }, {\n          subtree: true,\n          childList: true,\n          attributes: true,\n          attributeFilter: ['href']\n        });\n        this.$obs_scroller = observeDom(this.getScroller(), function () {\n          _this3.handleEvent('mutation');\n        }, {\n          subtree: true,\n          childList: true,\n          characterData: true,\n          attributes: true,\n          attributeFilter: ['id', 'style', 'class']\n        });\n      }\n    } // General event handler\n\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(evt) {\n      var type = isString(evt) ? evt : evt.type;\n      var self = this;\n\n      var resizeThrottle = function resizeThrottle() {\n        if (!self.$resizeTimeout) {\n          self.$resizeTimeout = setTimeout(function () {\n            self.refresh();\n            self.process();\n            self.$resizeTimeout = null;\n          }, self.$config.throttle);\n        }\n      };\n\n      if (type === 'scroll') {\n        if (!this.$obs_scroller) {\n          // Just in case we are added to the DOM before the scroll target is\n          // We re-instantiate our listeners, just in case\n          this.listen();\n        }\n\n        this.process();\n      } else if (/(resize|orientationchange|mutation|refresh)/.test(type)) {\n        // Postpone these events by throttle time\n        resizeThrottle();\n      }\n    } // Refresh the list of target links on the element we are applied to\n\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      var _this4 = this;\n\n      var scroller = this.getScroller();\n\n      if (!scroller) {\n        return;\n      }\n\n      var autoMethod = scroller !== scroller.window ? OffsetMethod.POSITION : OffsetMethod.OFFSET;\n      var method = this.$config.method === 'auto' ? autoMethod : this.$config.method;\n      var methodFn = method === OffsetMethod.POSITION ? position : offset;\n      var offsetBase = method === OffsetMethod.POSITION ? this.getScrollTop() : 0;\n      this.$offsets = [];\n      this.$targets = [];\n      this.$scrollHeight = this.getScrollHeight(); // Find all the unique link HREFs that we will control\n\n      selectAll(this.$selector, this.$el) // Get HREF value\n      .map(function (link) {\n        return getAttr(link, 'href');\n      }) // Filter out HREFs that do not match our RegExp\n      .filter(function (href) {\n        return href && HREF_REGEX.test(href || '');\n      }) // Find all elements with ID that match HREF hash\n      .map(function (href) {\n        // Convert HREF into an ID (including # at beginning)\n        var id = href.replace(HREF_REGEX, '$1').trim();\n\n        if (!id) {\n          return null;\n        } // Find the element with the ID specified by id\n\n\n        var el = select(id, scroller);\n\n        if (el && isVisible(el)) {\n          return {\n            offset: parseInt(methodFn(el).top, 10) + offsetBase,\n            target: id\n          };\n        }\n\n        return null;\n      }).filter(Boolean) // Sort them by their offsets (smallest first)\n      .sort(function (a, b) {\n        return a.offset - b.offset;\n      }) // record only unique targets/offsets\n      .reduce(function (memo, item) {\n        if (!memo[item.target]) {\n          _this4.$offsets.push(item.offset);\n\n          _this4.$targets.push(item.target);\n\n          memo[item.target] = true;\n        }\n\n        return memo;\n      }, {}); // Return this for easy chaining\n\n      return this;\n    } // Handle activating/clearing\n\n  }, {\n    key: \"process\",\n    value: function process() {\n      var scrollTop = this.getScrollTop() + this.$config.offset;\n      var scrollHeight = this.getScrollHeight();\n      var maxScroll = this.$config.offset + scrollHeight - this.getOffsetHeight();\n\n      if (this.$scrollHeight !== scrollHeight) {\n        this.refresh();\n      }\n\n      if (scrollTop >= maxScroll) {\n        var target = this.$targets[this.$targets.length - 1];\n\n        if (this.$activeTarget !== target) {\n          this.activate(target);\n        }\n\n        return;\n      }\n\n      if (this.$activeTarget && scrollTop < this.$offsets[0] && this.$offsets[0] > 0) {\n        this.$activeTarget = null;\n        this.clear();\n        return;\n      }\n\n      for (var i = this.$offsets.length; i--;) {\n        var isActiveTarget = this.$activeTarget !== this.$targets[i] && scrollTop >= this.$offsets[i] && (isUndefined(this.$offsets[i + 1]) || scrollTop < this.$offsets[i + 1]);\n\n        if (isActiveTarget) {\n          this.activate(this.$targets[i]);\n        }\n      }\n    }\n  }, {\n    key: \"getScroller\",\n    value: function getScroller() {\n      if (this.$scroller) {\n        return this.$scroller;\n      }\n\n      var scroller = this.$config.element;\n\n      if (!scroller) {\n        return null;\n      } else if (isElement(scroller.$el)) {\n        scroller = scroller.$el;\n      } else if (isString(scroller)) {\n        scroller = select(scroller);\n      }\n\n      if (!scroller) {\n        return null;\n      }\n\n      this.$scroller = scroller.tagName === 'BODY' ? window : scroller;\n      return this.$scroller;\n    }\n  }, {\n    key: \"getScrollTop\",\n    value: function getScrollTop() {\n      var scroller = this.getScroller();\n      return scroller === window ? scroller.pageYOffset : scroller.scrollTop;\n    }\n  }, {\n    key: \"getScrollHeight\",\n    value: function getScrollHeight() {\n      return this.getScroller().scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);\n    }\n  }, {\n    key: \"getOffsetHeight\",\n    value: function getOffsetHeight() {\n      var scroller = this.getScroller();\n      return scroller === window ? window.innerHeight : getBCR(scroller).height;\n    }\n  }, {\n    key: \"activate\",\n    value: function activate(target) {\n      var _this5 = this;\n\n      this.$activeTarget = target;\n      this.clear(); // Grab the list of target links (<a href=\"{$target}\">)\n\n      var links = selectAll(this.$selector // Split out the base selectors\n      .split(',') // Map to a selector that matches links with HREF ending in the ID (including '#')\n      .map(function (selector) {\n        return \"\".concat(selector, \"[href$=\\\"\").concat(target, \"\\\"]\");\n      }) // Join back into a single selector string\n      .join(','), this.$el);\n      links.forEach(function (link) {\n        if (hasClass(link, ClassName.DROPDOWN_ITEM)) {\n          // This is a dropdown item, so find the .dropdown-toggle and set it's state\n          var dropdown = closest(Selector.DROPDOWN, link);\n\n          if (dropdown) {\n            _this5.setActiveState(select(Selector.DROPDOWN_TOGGLE, dropdown), true);\n          } // Also set this link's state\n\n\n          _this5.setActiveState(link, true);\n        } else {\n          // Set triggered link as active\n          _this5.setActiveState(link, true);\n\n          if (matches(link.parentElement, Selector.NAV_ITEMS)) {\n            // Handle nav-link inside nav-item, and set nav-item active\n            _this5.setActiveState(link.parentElement, true);\n          } // Set triggered links parents as active\n          // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor\n\n\n          var el = link;\n\n          while (el) {\n            el = closest(Selector.NAV_LIST_GROUP, el);\n            var sibling = el ? el.previousElementSibling : null;\n\n            if (sibling && matches(sibling, \"\".concat(Selector.NAV_LINKS, \", \").concat(Selector.LIST_ITEMS))) {\n              _this5.setActiveState(sibling, true);\n            } // Handle special case where nav-link is inside a nav-item\n\n\n            if (sibling && matches(sibling, Selector.NAV_ITEMS)) {\n              _this5.setActiveState(select(Selector.NAV_LINKS, sibling), true); // Add active state to nav-item as well\n\n\n              _this5.setActiveState(sibling, true);\n            }\n          }\n        }\n      }); // Signal event to via $root, passing ID of activated target and reference to array of links\n\n      if (links && links.length > 0 && this.$root) {\n        this.$root.$emit(ACTIVATE_EVENT, target, links);\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var _this6 = this;\n\n      selectAll(\"\".concat(this.$selector, \", \").concat(Selector.NAV_ITEMS), this.$el).filter(function (el) {\n        return hasClass(el, ClassName.ACTIVE);\n      }).forEach(function (el) {\n        return _this6.setActiveState(el, false);\n      });\n    }\n  }, {\n    key: \"setActiveState\",\n    value: function setActiveState(el, active) {\n      if (!el) {\n        return;\n      }\n\n      if (active) {\n        addClass(el, ClassName.ACTIVE);\n      } else {\n        removeClass(el, ClassName.ACTIVE);\n      }\n    }\n  }], [{\n    key: \"Name\",\n    get: function get() {\n      return NAME;\n    }\n  }, {\n    key: \"Default\",\n    get: function get() {\n      return Default;\n    }\n  }, {\n    key: \"DefaultType\",\n    get: function get() {\n      return DefaultType;\n    }\n  }]);\n\n  return ScrollSpy;\n}();\n\nexport default ScrollSpy;","import ScrollSpy from './scrollspy.class';\nimport { isBrowser } from '../../utils/env';\nimport { keys } from '../../utils/object';\nimport { isNumber, isObject, isString } from '../../utils/inspect'; // Key we use to store our instance\n\nvar BV_SCROLLSPY = '__BV_ScrollSpy__'; // Build a ScrollSpy config based on bindings (if any)\n// Arguments and modifiers take precedence over passed value config object\n\n/* istanbul ignore next: not easy to test */\n\nvar parseBindings = function parseBindings(bindings)\n/* istanbul ignore next: not easy to test */\n{\n  var config = {}; // If argument, assume element ID\n\n  if (bindings.arg) {\n    // Element ID specified as arg\n    // We must prepend '#' to become a CSS selector\n    config.element = \"#\".concat(bindings.arg);\n  } // Process modifiers\n\n\n  keys(bindings.modifiers).forEach(function (mod) {\n    if (/^\\d+$/.test(mod)) {\n      // Offset value\n      config.offset = parseInt(mod, 10);\n    } else if (/^(auto|position|offset)$/.test(mod)) {\n      // Offset method\n      config.method = mod;\n    }\n  }); // Process value\n\n  if (isString(bindings.value)) {\n    // Value is a CSS ID or selector\n    config.element = bindings.value;\n  } else if (isNumber(bindings.value)) {\n    // Value is offset\n    config.offset = Math.round(bindings.value);\n  } else if (isObject(bindings.value)) {\n    // Value is config object\n    // Filter the object based on our supported config options\n    keys(bindings.value).filter(function (k) {\n      return Boolean(ScrollSpy.DefaultType[k]);\n    }).forEach(function (k) {\n      config[k] = bindings.value[k];\n    });\n  }\n\n  return config;\n}; // Add or update ScrollSpy on our element\n\n\nvar applyScrollspy = function applyScrollspy(el, bindings, vnode)\n/* istanbul ignore next: not easy to test */\n{\n  if (!isBrowser) {\n    /* istanbul ignore next */\n    return;\n  }\n\n  var config = parseBindings(bindings);\n\n  if (el[BV_SCROLLSPY]) {\n    el[BV_SCROLLSPY].updateConfig(config, vnode.context.$root);\n  } else {\n    el[BV_SCROLLSPY] = new ScrollSpy(el, config, vnode.context.$root);\n  }\n}; // Remove ScrollSpy on our element\n\n/* istanbul ignore next: not easy to test */\n\n\nvar removeScrollspy = function removeScrollspy(el)\n/* istanbul ignore next: not easy to test */\n{\n  if (el[BV_SCROLLSPY]) {\n    el[BV_SCROLLSPY].dispose();\n    el[BV_SCROLLSPY] = null;\n    delete el[BV_SCROLLSPY];\n  }\n};\n/*\n * Export our directive\n */\n\n\nexport var VBScrollspy = {\n  bind: function bind(el, bindings, vnode)\n  /* istanbul ignore next: not easy to test */\n  {\n    applyScrollspy(el, bindings, vnode);\n  },\n  inserted: function inserted(el, bindings, vnode)\n  /* istanbul ignore next: not easy to test */\n  {\n    applyScrollspy(el, bindings, vnode);\n  },\n  update: function update(el, bindings, vnode)\n  /* istanbul ignore next: not easy to test */\n  {\n    if (bindings.value !== bindings.oldValue) {\n      applyScrollspy(el, bindings, vnode);\n    }\n  },\n  componentUpdated: function componentUpdated(el, bindings, vnode)\n  /* istanbul ignore next: not easy to test */\n  {\n    if (bindings.value !== bindings.oldValue) {\n      applyScrollspy(el, bindings, vnode);\n    }\n  },\n  unbind: function unbind(el)\n  /* istanbul ignore next: not easy to test */\n  {\n    removeScrollspy(el);\n  }\n};\nexport default VBScrollspy;","import { VBScrollspy } from './scrollspy';\nimport { pluginFactory } from '../../utils/plugins';\nvar VBScrollspyPlugin =\n/*#__PURE__*/\npluginFactory({\n  directives: {\n    VBScrollspy: VBScrollspy\n  }\n});\nexport { VBScrollspyPlugin, VBScrollspy };\nexport default VBScrollspyPlugin;","import { VBToggle } from './toggle';\nimport { pluginFactory } from '../../utils/plugins';\nvar VBTogglePlugin =\n/*#__PURE__*/\npluginFactory({\n  directives: {\n    VBToggle: VBToggle\n  }\n});\nexport { VBTogglePlugin, VBToggle };\nexport default VBTogglePlugin;","import { VBTooltip } from './tooltip';\nimport { pluginFactory } from '../../utils/plugins';\nvar VBTooltipPlugin =\n/*#__PURE__*/\npluginFactory({\n  directives: {\n    VBTooltip: VBTooltip\n  }\n});\nexport { VBTooltipPlugin, VBTooltip };\nexport default VBTooltipPlugin;","// Index file used for the main builds, which does not include legacy plugin names\n// Once es/ buld is removed, then this file will be renamed to index.js\nimport { pluginFactory } from '../utils/plugins';\nimport { VBModalPlugin } from './modal';\nimport { VBPopoverPlugin } from './popover';\nimport { VBScrollspyPlugin } from './scrollspy';\nimport { VBTogglePlugin } from './toggle';\nimport { VBTooltipPlugin } from './tooltip'; // Main plugin for installing all directive plugins\n\nexport var directivesPlugin =\n/*#__PURE__*/\npluginFactory({\n  plugins: {\n    VBModalPlugin: VBModalPlugin,\n    VBPopoverPlugin: VBPopoverPlugin,\n    VBScrollspyPlugin: VBScrollspyPlugin,\n    VBTogglePlugin: VBTogglePlugin,\n    VBTooltipPlugin: VBTooltipPlugin\n  }\n}); // Named exports of all directives (VB<Name>) and Plugins (VB<name>Plugin)\n// See src/compinents/index.esm.js for notes/comment\n// export * from './modal'\n\nexport { VBModalPlugin } from './modal';\nexport { VBModal } from './modal/modal'; // export * from './popover'\n\nexport { VBPopoverPlugin } from './popover';\nexport { VBPopover } from './popover/popover'; // export * from './scrollspy'\n\nexport { VBScrollspyPlugin } from './scrollspy';\nexport { VBScrollspy } from './scrollspy/scrollspy'; // export * from './toggle'\n\nexport { VBTogglePlugin } from './toggle';\nexport { VBToggle } from './toggle/toggle'; // export * from './tooltip'\n\nexport { VBTooltipPlugin } from './tooltip';\nexport { VBTooltip } from './tooltip/tooltip';","/*!\n * BoostrapVue 2.0.0-rc.28\n *\n * @link https://bootstrap-vue.js.org\n * @source https://github.com/bootstrap-vue/bootstrap-vue\n * @copyright (c) 2016-2019 BootstrapVue\n * @license MIT\n * https://github.com/bootstrap-vue/bootstrap-vue/blob/master/LICENSE\n */\nimport { installFactory } from './utils/plugins';\nimport { componentsPlugin } from './components/index.esm';\nimport { directivesPlugin } from './directives/index.esm';\nimport BVConfigPlugin from './bv-config';\nvar NAME = 'BootstrapVue'; // Named exports of all components and component group plugins\n\nexport * from './components/index.esm'; // Named exports of all directives and directive group plugins\n\nexport * from './directives/index.esm'; // BootstrapVue installer\n\nvar install =\n/*#__PURE__*/\ninstallFactory({\n  plugins: {\n    componentsPlugin: componentsPlugin,\n    directivesPlugin: directivesPlugin\n  }\n}); // BootstrapVue plugin\n\nvar BootstrapVue =\n/*#__PURE__*/\n{\n  install: install,\n  NAME: NAME // Named exports for BvConfigPlugin and BootstrapVue\n\n};\nexport { // Installer exported in case the consumer does not import `default`\n// as the plugin in CommonJS build (or does not have interop enabled\n// for CommonJS). Both the following will work:\n//   BootstrapVue = require('bootstrap-vue')\n//   BootstrapVue = require('bootstrap-vue').default\n//   Vue.use(BootstrapVue)\ninstall, NAME, // BV Config Plugin\nBVConfigPlugin, // BVConfigPlugin has been documented as BVConfig as well,\n// so we add an alias to the shorter name for backwards compat\nBVConfigPlugin as BVConfig, // Main BootstrapVue Plugin\nBootstrapVue }; // Default export is the BootstrapVue plugin\n\nexport default BootstrapVue;","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Popper from 'popper.js';\nimport PopOver from '../../utils/popover.class';\nimport warn from '../../utils/warn';\nimport { getComponentConfig } from '../../utils/config';\nimport { isBrowser } from '../../utils/env';\nimport { isFunction, isObject, isString } from '../../utils/inspect';\nimport { keys } from '../../utils/object'; // Key which we use to store tooltip object on element\n\nvar BV_POPOVER = '__BV_PopOver__'; // Valid event triggers\n\nvar validTriggers = {\n  focus: true,\n  hover: true,\n  click: true,\n  blur: true // Directive modifier test regular expressions. Pre-compile for performance\n\n};\nvar htmlRE = /^html$/;\nvar noFadeRE = /^nofade$/i;\nvar placementRE = /^(auto|top(left|right)?|bottom(left|right)?|left(top|bottom)?|right(top|bottom)?)$/;\nvar boundaryRE = /^(window|viewport|scrollParent)$/;\nvar delayRE = /^d\\d+$/;\nvar offsetRE = /^o-?\\d+$/;\nvar variantRE = /^v-.+$/; // Build a PopOver config based on bindings (if any)\n// Arguments and modifiers take precedence over passed value config object\n\n/* istanbul ignore next: not easy to test */\n\nvar parseBindings = function parseBindings(bindings)\n/* istanbul ignore next: not easy to test */\n{\n  // We start out with a basic config\n  var NAME = 'BPopover';\n  var config = {\n    delay: getComponentConfig(NAME, 'delay'),\n    boundary: String(getComponentConfig(NAME, 'boundary')),\n    boundaryPadding: parseInt(getComponentConfig(NAME, 'boundaryPadding'), 10) || 0,\n    variant: getComponentConfig(NAME, 'variant'),\n    customClass: getComponentConfig(NAME, 'customClass') // Process bindings.value\n\n  };\n\n  if (isString(bindings.value)) {\n    // Value is popover content (html optionally supported)\n    config.content = bindings.value;\n  } else if (isFunction(bindings.value)) {\n    // Content generator function\n    config.content = bindings.value;\n  } else if (isObject(bindings.value)) {\n    // Value is config object, so merge\n    config = _objectSpread({}, config, {}, bindings.value);\n  } // If argument, assume element ID of container element\n\n\n  if (bindings.arg) {\n    // Element ID specified as arg\n    // We must prepend '#' to become a CSS selector\n    config.container = \"#\".concat(bindings.arg);\n  } // Process modifiers\n\n\n  keys(bindings.modifiers).forEach(function (mod) {\n    if (htmlRE.test(mod)) {\n      // Title allows HTML\n      config.html = true;\n    } else if (noFadeRE.test(mod)) {\n      // no animation\n      config.animation = false;\n    } else if (placementRE.test(mod)) {\n      // placement of popover\n      config.placement = mod;\n    } else if (boundaryRE.test(mod)) {\n      // Boundary of popover\n      config.boundary = mod;\n    } else if (delayRE.test(mod)) {\n      // Delay value\n      var delay = parseInt(mod.slice(1), 10) || 0;\n\n      if (delay) {\n        config.delay = delay;\n      }\n    } else if (offsetRE.test(mod)) {\n      // Offset value (negative allowed)\n      var offset = parseInt(mod.slice(1), 10) || 0;\n\n      if (offset) {\n        config.offset = offset;\n      }\n    } else if (variantRE.test(mod)) {\n      // Variant\n      config.variant = mod.slice(2) || null;\n    }\n  }); // Special handling of event trigger modifiers trigger is\n  // a space separated list\n\n  var selectedTriggers = {}; // Parse current config object trigger\n\n  var triggers = isString(config.trigger) ? config.trigger.trim().split(/\\s+/) : [];\n  triggers.forEach(function (trigger) {\n    if (validTriggers[trigger]) {\n      selectedTriggers[trigger] = true;\n    }\n  }); // Parse modifiers for triggers\n\n  keys(validTriggers).forEach(function (trigger) {\n    if (bindings.modifiers[trigger]) {\n      selectedTriggers[trigger] = true;\n    }\n  }); // Sanitize triggers\n\n  config.trigger = keys(selectedTriggers).join(' ');\n\n  if (config.trigger === 'blur') {\n    // Blur by itself is useless, so convert it to focus\n    config.trigger = 'focus';\n  }\n\n  if (!config.trigger) {\n    // Remove trigger config\n    delete config.trigger;\n  }\n\n  return config;\n}; // Add or update PopOver on our element\n\n\nvar applyPopover = function applyPopover(el, bindings, vnode) {\n  if (!isBrowser) {\n    /* istanbul ignore next */\n    return;\n  } // Popper is required for PopOvers to work\n\n\n  if (!Popper) {\n    /* istanbul ignore next */\n    warn('v-b-popover: Popper.js is required for PopOvers to work');\n    /* istanbul ignore next */\n\n    return;\n  }\n\n  var config = parseBindings(bindings);\n\n  if (el[BV_POPOVER]) {\n    el[BV_POPOVER].updateConfig(config);\n  } else {\n    el[BV_POPOVER] = new PopOver(el, config, vnode.context);\n  }\n}; // Remove PopOver on our element\n\n\nvar removePopover = function removePopover(el) {\n  if (el[BV_POPOVER]) {\n    el[BV_POPOVER].destroy();\n    el[BV_POPOVER] = null;\n    delete el[BV_POPOVER];\n  }\n};\n/*\n * Export our directive\n */\n\n\nexport var VBPopover = {\n  bind: function bind(el, bindings, vnode) {\n    applyPopover(el, bindings, vnode);\n  },\n  inserted: function inserted(el, bindings, vnode) {\n    applyPopover(el, bindings, vnode);\n  },\n  update: function update(el, bindings, vnode)\n  /* istanbul ignore next: not easy to test */\n  {\n    if (bindings.value !== bindings.oldValue) {\n      applyPopover(el, bindings, vnode);\n    }\n  },\n  componentUpdated: function componentUpdated(el, bindings, vnode)\n  /* istanbul ignore next: not easy to test */\n  {\n    if (bindings.value !== bindings.oldValue) {\n      applyPopover(el, bindings, vnode);\n    }\n  },\n  unbind: function unbind(el) {\n    removePopover(el);\n  }\n};\nexport default VBPopover;","import { setAttr, removeAttr } from '../../utils/dom';\nimport { bindTargets, unbindTargets } from '../../utils/target'; // Target listen types\n\nvar listenTypes = {\n  click: true // Emitted show event for modal\n\n};\nvar EVENT_SHOW = 'bv::show::modal';\n\nvar setRole = function setRole(el, binding, vnode) {\n  if (el.tagName !== 'BUTTON') {\n    setAttr(el, 'role', 'button');\n  }\n};\n/*\n * Export our directive\n */\n\n\nexport var VBModal = {\n  // eslint-disable-next-line no-shadow-restricted-names\n  bind: function bind(el, binding, vnode) {\n    bindTargets(vnode, binding, listenTypes, function (_ref) {\n      var targets = _ref.targets,\n          vnode = _ref.vnode;\n      targets.forEach(function (target) {\n        vnode.context.$root.$emit(EVENT_SHOW, target, vnode.elm);\n      });\n    }); // If element is not a button, we add `role=\"button\"` for accessibility\n\n    setRole(el, binding, vnode);\n  },\n  updated: setRole,\n  componentUpdated: setRole,\n  unbind: function unbind(el, binding, vnode) {\n    unbindTargets(vnode, binding, listenTypes); // If element is not a button, we add `role=\"button\"` for accessibility\n\n    if (el.tagName !== 'BUTTON') {\n      removeAttr(el, 'role', 'button');\n    }\n  }\n};\nexport default VBModal;"],"sourceRoot":""}